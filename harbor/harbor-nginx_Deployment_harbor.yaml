apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: nginx
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-16.0.4
  name: harbor-nginx
  namespace: harbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nginx
      app.kubernetes.io/instance: harbor
      app.kubernetes.io/name: harbor
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap: 7088984f7831f406784f8acb7f1011d772443fcd7aa1f995ea654f2965ec2c69
        checksum/tls-secret: b8b34f74ef3f3cfe371d9295df5d584def70ce475cf88eee92ffb5e07aa724de
      labels:
        app.kubernetes.io/component: nginx
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        helm.sh/chart: harbor-16.0.4
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: nginx
                  app.kubernetes.io/instance: harbor
                  app.kubernetes.io/name: harbor
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        envFrom: null
        image: docker.io/bitnami/nginx:1.23.2-debian-11-r12
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: nginx
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        - containerPort: 4443
          name: notary
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/nginx.conf
          name: config
          subPath: nginx.conf
        - mountPath: /etc/nginx/cert
          name: certificate
      securityContext:
        fsGroup: 1001
      volumes:
      - configMap:
          name: harbor-nginx
        name: config
      - name: certificate
        secret:
          secretName: harbor-nginx
