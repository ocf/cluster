apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: jobservice
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-16.1.2
  name: harbor-jobservice
  namespace: harbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: jobservice
      app.kubernetes.io/instance: harbor
      app.kubernetes.io/name: harbor
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap-env: 63306a7b7fa0a96dabd8449cf3f0479bcd7bc6d076757e613822372a849e8cdc
      labels:
        app.kubernetes.io/component: jobservice
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        helm.sh/chart: harbor-16.1.2
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: jobservice
                  app.kubernetes.io/instance: harbor
                  app.kubernetes.io/name: harbor
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: CORE_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: harbor-core
        - name: JOBSERVICE_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: harbor-jobservice
        envFrom:
        - configMapRef:
            name: harbor-jobservice-envvars
        - secretRef:
            name: harbor-jobservice-envvars
        image: docker.io/bitnami/harbor-jobservice:2.7.0-debian-11-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/v1/stats
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: jobservice
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/v1/stats
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /etc/jobservice/config.yml
          name: jobservice-config
          subPath: config.yml
        - mountPath: /var/log/jobs
          name: job-logs
          subPath: null
      initContainers: null
      securityContext:
        fsGroup: 1001
      volumes:
      - name: jobservice-config
        secret:
          secretName: harbor-jobservice-config
      - name: job-logs
        persistentVolumeClaim:
          claimName: harbor-jobservice
