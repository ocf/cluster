apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    app.kubernetes.io/version: 2.13.2
    helm.sh/chart: harbor-26.8.3
  name: harbor-core
  namespace: harbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: core
      app.kubernetes.io/instance: harbor
      app.kubernetes.io/name: harbor
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap: 225bf048c93c9a2d41e40c8300cd44d16b30f6867a2721c4f0a3b36fd9ce3c0f
        checksum/configmap-envvars: d30106ed85f13a007f1a16e37ccf3c4425e97d9644e0e3ae5490ad6fe1957d2d
      labels:
        app.kubernetes.io/component: core
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/version: 2.13.2
        helm.sh/chart: harbor-26.8.3
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: core
                  app.kubernetes.io/instance: harbor
                  app.kubernetes.io/name: harbor
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: CORE_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: harbor-core
        - name: JOBSERVICE_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: harbor-jobservice
        envFrom:
        - configMapRef:
            name: harbor-core-envvars
        - secretRef:
            name: harbor-core-envvars
        image: docker.io/bitnami/harbor-core:2.13.2-debian-12-r1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        name: core
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8001
          name: metrics
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/v2.0/ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 750m
            ephemeral-storage: 2Gi
            memory: 768Mi
          requests:
            cpu: 500m
            ephemeral-storage: 50Mi
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /etc/ssl/certs
          name: empty-dir
          subPath: etc-ssl-certs
        - mountPath: /etc/core/app.conf
          name: config
          subPath: app.conf
        - mountPath: /etc/core/private_key.pem
          name: token-service-private-key
          subPath: tls.key
        - mountPath: /etc/core/key
          name: secret-key
          subPath: key
        - mountPath: /etc/core/ca
          name: ca-download
      initContainers:
      - args:
        - -ec
        - cp -r /etc/ssl/certs/* /certs
        command:
        - /bin/bash
        image: docker.io/bitnami/harbor-core:2.13.2-debian-12-r1
        imagePullPolicy: IfNotPresent
        name: certificate-volume
        resources:
          limits:
            cpu: 150m
            ephemeral-storage: 2Gi
            memory: 192Mi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /certs
          name: empty-dir
          subPath: etc-ssl-certs
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: empty-dir
      - configMap:
          items:
          - key: app.conf
            path: app.conf
          name: harbor-core
        name: config
      - name: token-service-private-key
        secret:
          secretName: harbor-core
      - name: secret-key
        secret:
          items:
          - key: secretKey
            path: key
          secretName: harbor-core
      - name: ca-download
        secret:
          secretName: harbor.ocf.berkeley.edu-tls
