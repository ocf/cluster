apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-17.1.0
  name: harbor-exporter
  namespace: harbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/instance: harbor
      app.kubernetes.io/name: harbor
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap-env: a3437833620158da522451071cbc7ba4914367ca4082fe06b8c57705bfc71922
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        helm.sh/chart: harbor-17.1.0
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: exporter
                  app.kubernetes.io/instance: harbor
                  app.kubernetes.io/name: harbor
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: HARBOR_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: harbor-core-envvars
        - name: HARBOR_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: HARBOR_ADMIN_PASSWORD
              name: harbor-core-envvars
        envFrom:
        - configMapRef:
            name: harbor-exporter-envvars
        - secretRef:
            name: harbor-exporter-envvars
        image: docker.io/bitnami/harbor-exporter:2.8.3-debian-11-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /metrics
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: exporter
        ports:
        - containerPort: 8001
          name: metrics
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /metrics
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts: null
      securityContext:
        fsGroup: 1001
      volumes: null
