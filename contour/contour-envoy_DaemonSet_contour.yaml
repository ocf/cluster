apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: envoy
    app.kubernetes.io/instance: contour
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: contour
    app.kubernetes.io/version: 1.28.2
    helm.sh/chart: contour-17.0.7
  name: contour-envoy
  namespace: contour
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: envoy
      app.kubernetes.io/instance: contour
      app.kubernetes.io/name: contour
  template:
    metadata:
      labels:
        app.kubernetes.io/component: envoy
        app.kubernetes.io/instance: contour
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: contour
        app.kubernetes.io/version: 1.28.2
        helm.sh/chart: contour-17.0.7
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity: null
      automountServiceAccountToken: false
      containers:
      - args:
        - envoy
        - shutdown-manager
        - --serve-port=8090
        command:
        - contour
        image: docker.io/bitnami/contour:1.28.3-debian-12-r0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - contour
              - envoy
              - shutdown
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 120
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: http-shutdown
          timeoutSeconds: 5
        name: shutdown-manager
        ports:
        - containerPort: 8090
          name: http-shutdown
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http-shutdown
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 150m
            ephemeral-storage: 1024Mi
            memory: 192Mi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /admin
          name: empty-dir
          subPath: app-admin-dir
      - args:
        - -c
        - /config/envoy.json
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        command:
        - envoy
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: docker.io/bitnami/envoy:1.28.2-debian-12-r0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            httpGet:
              path: /shutdown
              port: 8090
              scheme: HTTP
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 120
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: envoy
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 8002
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: '1.5'
            ephemeral-storage: 1024Mi
            memory: 3072Mi
          requests:
            cpu: '1.0'
            ephemeral-storage: 50Mi
            memory: 2048Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /config
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /certs
          name: envoycert
          readOnly: true
        - mountPath: /admin
          name: empty-dir
          subPath: app-admin-dir
      dnsPolicy: ClusterFirst
      hostNetwork: false
      initContainers:
      - args:
        - bootstrap
        - /config/envoy.json
        - --xds-address=contour
        - --xds-port=8001
        - --resources-dir=/config/resources
        - --envoy-cafile=/certs/ca.crt
        - --envoy-cert-file=/certs/tls.crt
        - --envoy-key-file=/certs/tls.key
        command:
        - contour
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/bitnami/contour:1.28.3-debian-12-r0
        imagePullPolicy: IfNotPresent
        name: envoy-initconfig
        resources:
          limits:
            cpu: '1.5'
            ephemeral-storage: 1024Mi
            memory: 3072Mi
          requests:
            cpu: '1.0'
            ephemeral-storage: 50Mi
            memory: 2048Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /config
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /certs
          name: envoycert
          readOnly: true
        - mountPath: /admin
          name: empty-dir
          subPath: app-admin-dir
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: contour-envoy
      terminationGracePeriodSeconds: 300
      volumes:
      - emptyDir: {}
        name: empty-dir
      - name: envoycert
        secret:
          secretName: envoycert
  updateStrategy:
    type: RollingUpdate
